name: Simplified Update Package

on:
  schedule:
    - cron: '0 0 * * *' # daily at midnight
  workflow_dispatch:

jobs:
  update:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch latest release info and download
      id: fetch
      run: |
        # Fetch the latest release information from GitHub API
        $response = Invoke-RestMethod -Uri 'https://api.github.com/repos/microsoft/IIS.Compression/releases/latest'

        # Extract the body content
        $bodyContent = $response.body

        # Use regex to find the File Name and Sha256Sum values
        $matches = [regex]::Matches($bodyContent, '\|\s*(.*?)\s*\|\s*(.*?)\s*\|')
        $urlMatches = [regex]::Matches($bodyContent, 'https://download\.microsoft\.com/download/[^\s]*\.msi')        

        # Create an empty array to hold the results
        $results = @()

        # Loop through the matches to extract the values
        foreach ($match in $matches) {
            $fileName = $match.Groups[1].Value
            $sha256Sum = $match.Groups[2].Value

            # Create a custom object to hold the File Name and Sha256Sum
            $obj = [PSCustomObject]@{
                'File Name' = $fileName
                'Sha256Sum' = $sha256Sum
            }

            # Add the custom object to the results array
            $results += $obj
        }

        # Initialize variables to hold the msi files and their sha256sums
        $x86_msi = $null
        $x86_sha256 = $null
        $amd64_msi = $null
        $amd64_sha256 = $null

        # Loop through the results array to separate and capture the values
        foreach ($result in $results) {
            if ($result.'File Name' -eq 'iiscompression_x86.msi') {
                $x86_msi = $result.'File Name'
                $x86_sha256 = $result.'Sha256Sum'
            }
            elseif ($result.'File Name' -eq 'iiscompression_amd64.msi') {
                $amd64_msi = $result.'File Name'
                $amd64_sha256 = $result.'Sha256Sum'
            }
        }

        # Output the captured variables
        echo "x86_msi=$x86_msi" >> $GITHUB_ENV
        echo "x86_sha256=$x86_sha256" >> $GITHUB_ENV
        echo "x64_msi=$amd64_msi" >> $GITHUB_ENV
        echo "amd64_sha256=$amd64_sha256" >> $GITHUB_ENV

        # Initialize variables to hold the URLs
        $x86_url = $null
        $amd64_url = $null

        # Capture URLs
        foreach ($urlMatch in $urlMatches) {
            $url = $urlMatch.Value
            if ($url -match 'iiscompression_x86\.msi') {
                $x86_url = $url
            }
            elseif ($url -match 'iiscompression_amd64\.msi') {
                $amd64_url = $url
            }
        }

        # Output the captured URLs
        echo "x86_url=$x86_url"
        echo "amd64_url=$amd64_url"

        # download the files
        echo "Downloading files..."
        Invoke-WebRequest -Uri $x86_url -OutFile $x86_msi
        Invoke-WebRequest -Uri $amd64_url -OutFile $amd64_msi

        #todo later